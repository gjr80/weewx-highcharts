##errorCatcher Echo
#*
A weeWX template to generate a JSON data file for weekly observation plots.

Copyright (C) 2016-18 Gary Roderick                 gjroderick<at>gmail.com

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see http://www.gnu.org/licenses/.


Description

This template is part of the Highcharts for WeeWX extension and produces a text
file containing JSON format data for use with Highcharts to plot WeeWX 
observation data over a one week period.


Pre-Requisites

Highcharts for WeeWX extension
PyEphem for inclusion of insolation data


Version: 0.2.2                                      Date: 4 September 2018   

Revision History

    4 September 2018    v0.2.2
        - reformatted comments
    16 May 2017         v0.2.1
        - no change, version number chnage only
    4 May 2017          v0.2.0
        - no change, version number chnage only
    22 November 2016    v0.1.0
        - initial implementation
*#
[{
"_version": "week.json.tmpl version 0.2.2",
"utcoffset": $utcOffset,
"timespan": {"start": $weekPlotStart, "stop": $weekPlotEnd},
##
"temperatureplot": {"series":
{"outTemp": {"name": "Temperature", "data": $outTempWeekjson},
#if $appTempWeekjson is not None
"dewpoint": {"name": "Dew Point", "data": $dewpointWeekjson},
"appTemp": {"name": "Apparent Temperature", "data": $appTempWeekjson}},
#else
"dewpoint": {"name": "Dew Point", "data": $dewpointWeekjson}},
#end if
"units": "$unit.label.outTemp"#slurp
#if $varExists('$outTemp_min_range')
, 
"minRange": $outTemp_min_range},
#else
},
#end if
##
"windchillplot": {"series":
{#slurp
#if $appTempWeekjson is not None
"appTemp": {"name": "Apparent Temperature", "data": $appTempWeekjson},
#end if
"windchill": {"name": "Wind Chill", "data": $windchillWeekjson},
"heatindex": {"name": "Heat Index", "data": $heatindexWeekjson}},
"units": "$unit.label.windchill"#slurp
#if $varExists('$outTemp_min_range')
, 
"minRange": $outTemp_min_range},
#else
},
#end if
##
"humidityplot": {"series":
{"outHumidity": {"name": "Humidity", "data": $outHumidityWeekjson}},
"units": "$unit.label.outHumidity"#slurp
#if $varExists('$outHumidity_min_range')
, 
"minRange": $outHumidity_min_range},
#else
},
#end if
##
"barometerplot": {"series":
{"barometer": {"name": "Barometer", "data": $barometerWeekjson}},
"units": "$unit.label.barometer"#slurp
#if $varExists('$barometer_min_range')
, 
"minRange": $barometer_min_range},
#else
},
#end if
##
"windplot": {"series":
{"windSpeed": {"name": "Wind Speed", "data": $windSpeedWeekjson},
"windGust": {"name": "Wind Gust", "data": $windGustWeekjson}},
"units": "$unit.label.windSpeed"#slurp
#if $varExists('$windSpeed_min_range')
, 
"minRange": $windSpeed_min_range},
#else
},
#end if
##
"winddirplot": {"series":
{"windDir": {"name": "Wind Direction", "data": $windDirWeekjson}},
"units": "$unit.label.windDir"#slurp
#if $varExists('$windDir_min_range')
, 
"minRange": $windDir_min_range},
#else
},
#end if
##
"rainplot": {"series":
{"rain": {"name": "Rainfall", "data": $rainWeekjson}},
"units": "$unit.label.rain"#slurp
#if $varExists('$rain_min_range')
, 
"minRange": $rain_min_range},
#else
},
#end if
##
"radiationplot": {"series":
#if $insolationWeekjson is not None
{"radiation": {"name": "Solar Radiation", "data": $radiationWeekjson},
"insolation": {"name": "Theoretical Max Solar Radiation", "data": $insolationWeekjson}},
#else
{"radiation": {"name": "Solar Radiation", "data": $radiationWeekjson}},
#end if
"units": "$unit.label.radiation"#slurp
#if $varExists('$radiation_min_range')
, 
"minRange": $radiation_min_range},
#else
},
#end if
##
"uvplot": {"series":
{"uv": {"name": "UV Index", "data": $uvWeekjson}},
"units": "$unit.label.UV"#slurp
#if $varExists('$UV_min_range')
, 
"minRange": $UV_min_range},
#else
},
#end if
##
"windroseDay": {#slurp
"series": $wr86400['windrosejson'],
"xAxis": {"categories": $wr86400['xAxisCategoriesjson']},
"yAxis": $wr86400['yAxisjson'],
"colors": $wr86400['coloursjson'],
"title": {"text": $wr86400['titlejson']},
"legend": {"title": {"text": $wr86400['legendTitlejson']}},
"bullseye": $wr86400['bullseyejson']
},
##
"windroseWeek": {#slurp
"series": $wr604800['windrosejson'],
"xAxis": {"categories": $wr604800['xAxisCategoriesjson']},
"yAxis": $wr604800['yAxisjson'],
"colors": $wr604800['coloursjson'],
"title": {"text": $wr604800['titlejson']},
"legend": {"title": {"text": $wr604800['legendTitlejson']}},
"bullseye": $wr604800['bullseyejson']
}
}]